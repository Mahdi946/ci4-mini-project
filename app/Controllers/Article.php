<?php

namespace App\Controllers;

use App\Controllers\BaseController;
use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;
use Psr\Log\LoggerInterface;

class Article extends BaseController
{
    public ?string $locale = null;

    public function initController(RequestInterface $request, ResponseInterface $response, LoggerInterface $logger)
    {
        parent::initController($request, $response, $logger); // TODO: Change the autogenerated stub
        $this ->locale = setting()->get('App.defaultLocale','locale');
        service('language')->setLocale($this->locale);
    }

    public function index(): string
    {
        return view('article_'.$this ->locale);
    }

    public function articleCreate()
    {
        if(service('auth')->user->can('article.create')) {
            $data = [
                'title' => $this->request->getPost('title'),
                'description' => $this->request->getPost('description'),
                'file' => $this->request->getFile('file')->getClientName(),
                'user_id' => service('auth')->user()->id,
            ];
            $rules = [
                'title' => 'required|min_length[3]|max_length[255]|string',
                'description' => 'required|min_length[3]',
            ];

            if (!$this->validateData($data, $rules)) {
                return view('article_' . $this->locale, ['errors' => $this->validator->getErrors()]);
            }
            $this->request->getFile('file')->store('article', $data['file']);
            $article = model('Article');
            $article->insert($data);
            return view('article_' . $this->locale, ['success' => $data['file']]);
        }
        else{
            return redirect()->to($this->locale.'login');
        }
    }

    public function delete($id)
    {
        if($this->request->isAJAX()) {
            if (service('auth')->user()->can('article.delete')) {
                model('Article')->delete($id);
                $article = model('Article')->withDeleted()->find($id);
                if (file_exists(WRITEPATH . 'uploads/article/' . $article['file']) == 1) {
                    unlink(WRITEPATH . 'uploads/article/' . $article['file']);
                }
                return $this->response->setJSON(['success' => true]);
            }
        }
    }

    public function sampleArticle()
    {
            $path = ROOTPATH.'public/sample.docx';
            return $this->response->download($path,null);
    }

}
